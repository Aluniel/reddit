{
 "kind": "discovery#rpcDescription",
 "etag": "\"hf84vk5HeqXKpApUTgMOcmfTP8c/4zOOJYzHR9HYS46H-SNggIOi2ig\"",
 "discoveryVersion": "v1",
 "id": "msgapi:v1",
 "name": "msgapi",
 "version": "v1",
 "description": "This is an API",
 "icons": {
  "x16": "https://www.gstatic.com/images/branding/product/1x/googleg_16dp.png",
  "x32": "https://www.gstatic.com/images/branding/product/1x/googleg_32dp.png"
 },
 "protocol": "rpc",
 "rootUrl": "https://reddit-fac-nantes.appspot.com/_ah/api/",
 "rpcUrl": "https://reddit-fac-nantes.appspot.com/_ah/api/rpc",
 "rpcPath": "/_ah/api/rpc",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "Deprecated. Please use quotaUser instead.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    }
   }
  }
 },
 "schemas": {
  "Key": {
   "id": "Key",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "complete": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "kind": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "namespace": {
     "type": "string"
    },
    "parent": {
     "$ref": "Key"
    }
   }
  },
  "MsgEntity": {
   "id": "MsgEntity",
   "type": "object",
   "properties": {
    "content": {
     "type": "string"
    },
    "idMsg": {
     "$ref": "Key"
    },
    "nbVotes": {
     "type": "integer",
     "format": "int32"
    },
    "sender": {
     "type": "string"
    }
   }
  }
 },
 "methods": {
  "msgapi.getMsg": {
   "id": "msgapi.getMsg",
   "allowGet": true,
   "parameters": {
    "idMsg": {
     "type": "string",
     "required": true
    }
   },
   "parameterOrder": [
    "idMsg"
   ],
   "returns": {
    "$ref": "MsgEntity"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "msgapi.setMsg": {
   "id": "msgapi.setMsg",
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 }
}
